{"version":3,"sources":["admin.js"],"names":[],"mappingsfile":"admin.min.js","sourcesContent":["jQuery(function($){\n\n\t//day picker\n\t$('select#day').change(function(){\n\t\tvar val = $(this).val();\n\t\tvar $time = $('input#time');\n\t\tif (val) {\n\t\t\t$('input#time').removeAttr('disabled');\n\t\t\tif (!$time.val() && $time.attr('data-value')) $time.val($time.attr('data-value'));\n\t\t} else {\n\t\t\t$time.attr('data-value', $time.val()).val('').attr('disabled', 'disabled');\n\t\t}\n\t});\n\t\n\t//types checkboxes: ensure not both open and closed\n\t$('body.post-type-meetings form#post').on('change', 'input[name=\"types[]\"]', function() {\n\t\tif ($('body.post-type-meetings form#post input[name=\"types[]\"][value=\"C\"]').prop('checked') && \n\t\t\t$('body.post-type-meetings form#post input[name=\"types[]\"][value=\"O\"]').prop('checked')) {\n\t\t\tif ($(this).val() == 'C') {\n\t\t\t\t$('body.post-type-meetings form#post input[name=\"types[]\"][value=\"O\"]').prop('checked', false);\n\t\t\t} else {\n\t\t\t\t$('body.post-type-meetings form#post input[name=\"types[]\"][value=\"C\"]').prop('checked', false);\n\t\t\t}\n\t\t}\n\t});\n\t\n\t//delete email contact\n\t$('#get_feedback table span').click(function(){\n\t\t$(this).parent().submit();\n\t});\n\n\t//location typeahead\n\tvar locations = new Bloodhound({\n\t\tdatumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),\n\t\tqueryTokenizer: Bloodhound.tokenizers.whitespace,\n\t\tprefetch: {\n\t\t\turl: myAjax.ajaxurl + '?action=location',\n\t\t}\n\t});\n\tlocations.initialize();\n\t$('input#location').typeahead(null, {\n\t\tdisplayKey: 'value',\n\t\tsource: locations.ttAdapter()\n\t}).on('typeahead:autocompleted', function($e, datum){\n\t\t$('input[name=formatted_address]').val(datum.formatted_address);\n\t\t$('input[name=latitude]').val(datum.latitude);\n\t\t$('input[name=longitude]').val(datum.longitude);\n\t\t$('input[name=address]').val(datum.address);\n\t\t$('input[name=city]').val(datum.city);\n\t\t$('input[name=state]').val(datum.state);\n\t\t$('input[name=postal_code]').val(datum.postal_code);\n\t\t$('input[name=country]').val(datum.country);\n\t\t$('select[name=region] option[value=' + datum.region + ']').prop('selected', true);\n\t\t$('textarea[name=location_notes]').val(datum.notes);\n\t\tsetMap(datum.latitude, datum.longitude);\n\t});\n\n\t//group typeahead\n\tvar groups = new Bloodhound({\n\t\tdatumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),\n\t\tqueryTokenizer: Bloodhound.tokenizers.whitespace,\n\t\tprefetch: {\n\t\t\turl: myAjax.ajaxurl + '?action=tsml_group',\n\t\t\tttl: 10\n\t\t}\n\t});\n\tgroups.initialize();\n\t$('input#group').typeahead(null, {\n\t\tdisplayKey: 'value',\n\t\tsource: groups.ttAdapter()\n\t}).on('typeahead:autocompleted', function($e, datum){\n\t\t$('input[name=contact_1_name]').val(datum.contact_1_name);\n\t\t$('input[name=contact_1_email]').val(datum.contact_1_email);\n\t\t$('input[name=contact_1_phone]').val(datum.contact_1_phone);\n\t\t$('input[name=contact_2_name]').val(datum.contact_2_name);\n\t\t$('input[name=contact_2_email]').val(datum.contact_2_email);\n\t\t$('input[name=contact_2_phone]').val(datum.contact_2_phone);\n\t\t$('input[name=contact_3_name]').val(datum.contact_3_name);\n\t\t$('input[name=contact_3_email]').val(datum.contact_3_email);\n\t\t$('input[name=contact_3_phone]').val(datum.contact_3_phone);\n\t\t$('textarea[name=group_notes]').val(datum.notes);\n\t});\n\n\t/*timepicker\n\t$('input[type=time]').timepicker({\n\t\ttimeFormat: 'hh:mm tt',\n\t\tstepMinute: 15\n\t});*/\n\t\n\t$('input#group').change(function(){\n\t\t$('div#group .apply_group_to_location').removeClass('hidden');\n\t});\n\n\t$('form#post').submit(function(){\n\t\tif (!$('select#day').val()) {\n\t\t\t$('input#time').val(''); //double check is empty\n\t\t\treturn true; //by appointment, don't check time\n\t\t}\n\t\tvar timeVal = $('input#time').val();\n\t\tvar errors = false;\n\t\tif (timeVal.length != 5) errors = true;\n\t\tif (timeVal.indexOf(':') != 2) errors = true;\n\t\tvar hours = timeVal.substr(0, 2);\n\t\tvar minutes = timeVal.substr(3, 2);\n\t\tif (isNaN(hours) || hours < 0 || hours > 23) errors = true;\n\t\tif (isNaN(minutes) || minutes < 0 || minutes > 59) errors = true;\n\t\tif (errors) {\n\t\t\talert('Time should be 24-hour format HH:MM.');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\t//address / map\n\t$('input#formatted_address').blur(function(){\n\n\t\t//setting new form\n\t\t$('input#address').val('');\n\t\t$('input#city').val('');\n\t\t$('input#state').val('');\n\t\t$('input#zip').val('');\n\t\t$('input#country').val('');\n\t\t$('input#latitude').val('');\n\t\t$('input#longitude').val('');\n\n\t\tvar val = $(this).val().trim();\n\t\t\n\t\tif (!val.length) {\n\t\t\tsetMap();\n\t\t\t$('input#formatted_address').val(''); //clear any spaces\n\t\t\treturn;\n\t\t}\n\n\t\tjQuery.getJSON('https://maps.googleapis.com/maps/api/geocode/json', { address: val, key: myAjax.google_api_key }, function(data){\n\n\t\t\t//check status first, eg REQUEST_DENIED, ZERO_RESULTS\n\t\t\tif (data.status != 'OK') return;\n\t\t\t\n\t\t\t//set lat + lng\n\t\t\tvar latitude = data.results[0].geometry.location.lat;\n\t\t\tvar longitude = data.results[0].geometry.location.lng;\n\t\t\t$('input#latitude').val(latitude);\n\t\t\t$('input#longitude').val(longitude);\n\t\t\tsetMap(latitude, longitude);\n\n\t\t\t//guess region if not set\n\t\t\tvar region_id = false;\n\t\t\tif (!$('select#region option[selected]').size()) {\n\t\t\t\tval = data.results[0].formatted_address;\n\t\t\t\t$('select#region option').each(function(){\n\t\t\t\t\tvar region_name = $(this).text().replace('&nbsp;', '').trim();\n\t\t\t\t\tif (val.indexOf(region_name) != -1) region_id = $(this).attr('value');\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t//save address\n\t\t\tvar address = parseAddressComponents(data.results[0].address_components);\n\t\t\t$('input#address').val(address.address);\n\t\t\t$('input#city').val(address.city);\n\t\t\t$('input#state').val(address.state);\n\t\t\t$('input#postal_code').val(address.postal_code);\n\t\t\t$('input#country').val(address.country);\n\t\t\t$('input#formatted_address').val(address.formatted);\n\t\t\t\n\t\t\t//check if location with same address is already in the system, populate form\n\t\t\tjQuery.getJSON(myAjax.ajaxurl + '?action=address', { formatted_address: address.formatted }, function(data){\n\t\t\t\tif (data) {\n\t\t\t\t\t$('input[name=location]').val(data.location);\n\t\t\t\t\t$('select[name=region] option').prop('selected', false);\n\t\t\t\t\t$('select[name=region] option[value=' + data.region + ']').prop('selected', true);\n\t\t\t\t\t$('textarea[name=location_notes]').val(data.location_notes);\n\t\t\t\t} else if (region_id) {\n\t\t\t\t\t//set to guessed region earlier\n\t\t\t\t\t$('select[name=region] option').prop('selected', false);\n\t\t\t\t\t$('select[name=region] option[value=' + region_id + ']').prop('selected', true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t});\n\n\tif ($('input#formatted_address').val()) $('input#formatted_address').blur();\n\n\tfunction setMap(latitude, longitude) {\n\t\tif (!latitude || !longitude) {\n\t\t\t$('div#map').html('');\n\t\t\treturn;\n\t\t}\n\t\tvar myLatlng = new google.maps.LatLng(latitude, longitude);\n\t\tvar map = new google.maps.Map(document.getElementById('map'), { \n\t\t\tzoom: 16, \n\t\t\tzoomControl: false,\n\t\t\tscrollwheel: false,\n\t\t\tstreetViewControl: false,\n\t\t\tmapTypeControl: false,\n\t\t\tcenter: myLatlng\n\t\t});\n\t\tvar marker = new google.maps.Marker({ position: myLatlng, map: map });\n\t}\n\t\n\t//parse a google address components response into an array of useful values\n\tfunction parseAddressComponents(components) {\n\t\tvar point_of_interest, neighborhood, address, city, state, postal_code, country;\n\t\tvar formatted = [];\n\n\t\t//get address, city and state\n\t\tfor (var i = 0; i < components.length; i++) {\n\t\t\tvar c = components[i];\n\t\t\tif (!c.types.length || c.types[0] == 'point_of_interest') {\n\t\t\t\t//in case address is empty\n\t\t\t\tpoint_of_interest = c.short_name;\n\t\t\t} else if (c.types.indexOf('neighborhood') !== -1) {\n\t\t\t\tneighborhood = c.short_name;\n\t\t\t} else if (c.types.indexOf('street_number') !== -1) {\n\t\t\t\taddress = c.long_name;\n\t\t\t} else if (c.types.indexOf('route') !== -1) {\n\t\t\t\t//append street name\n\t\t\t\taddress = (address) ? address + ' ' + c.long_name : c.long_name;\n\t\t\t} else if (c.types.indexOf('locality') !== -1) {\n\t\t\t\tcity = c.long_name;\n\t\t\t} else if (c.types.indexOf('sublocality') !== -1) {\n\t\t\t\tif (!city) city = c.long_name;\n\t\t\t} else if (c.types.indexOf('administrative_area_level_3') !== -1) {\n\t\t\t\tif (!city) city = c.long_name;\n\t\t\t} else if (c.types.indexOf('administrative_area_level_1') !== -1) {\n\t\t\t\tstate = c.short_name;\n\t\t\t} else if (c.types.indexOf('postal_code') !== -1) {\n\t\t\t\tpostal_code = c.short_name;\n\t\t\t} else if (c.types.indexOf('country') !== -1) {\n\t\t\t\tcountry = c.short_name;\n\t\t\t}\n\t\t}\n\n\t\tif (!address && point_of_interest) address = point_of_interest;\n\t\t\n\t\tif (!address && neighborhood) address = neighborhood;\n\t\t\n\t\tif (address) formatted[formatted.length] = address;\n\t\t\n\t\tif (city) formatted[formatted.length] = city;\n\t\t\n\t\t//state and postal code should be part of the same unit if possible\n\t\tif (state) {\n\t\t\tif (address && postal_code) {\n\t\t\t\tformatted[formatted.length] = state + ' ' + postal_code;\n\t\t\t} else {\n\t\t\t\tformatted[formatted.length] = state;\n\t\t\t}\n\t\t} else if (postal_code) {\n\t\t\tformatted[formatted.length] = postal_code;\n\t\t}\n\t\t\n\t\tif (country) formatted[formatted.length] = country;\n\n\t\treturn {\n\t\t\taddress: address,\n\t\t\tcity: city,\n\t\t\tstate: state,\n\t\t\tpostal_code: postal_code,\n\t\t\tcountry: country,\n\t\t\tformatted: formatted.join(', ')\n\t\t}\n\t\n\t}\n});"],"sourceRoot":"/source/"}